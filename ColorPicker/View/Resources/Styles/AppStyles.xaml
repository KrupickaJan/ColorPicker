<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <Style
        x:Key="MainWindowBorder"
        TargetType="{x:Type Border}">
        <Style.Triggers>
            <!-- Define triggers to adjust margin based on window state 
            Add to avoid border disappearing when window is maximized -->
            <DataTrigger
                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                Value="Maximized">
                <Setter
                    Property="Margin"
                    Value="8" />
            </DataTrigger>
            <DataTrigger
                Binding="{Binding WindowState, RelativeSource={RelativeSource AncestorType=Window}}"
                Value="Normal">
                <Setter
                    Property="Margin"
                    Value="0" />
            </DataTrigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="PickereButtonStyle"
        TargetType="{x:Type Button}">
        <!-- AcceptsReturn property is being set to False for keyboard navigation
     to prevent the Enter button from performing undesired actions. -->
        <Setter
            Property="KeyboardNavigation.AcceptsReturn"
            Value="False" />
        <Setter
            Property="Background"
            Value="{DynamicResource MediumLightGray}" />
        <Setter
            Property="Margin"
            Value="1.2,1.2,1.2,1." />
        <Setter
            Property="Foreground"
            Value="{DynamicResource White}" />
        <Setter
            Property="FontSize"
            Value="18" />
        <Setter
            Property="FontWeight"
            Value="Regular" />
        <!-- Set the template for the button -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Button}">
                    <Border
                        Background="{TemplateBinding Background}"
                        CornerRadius="5">
                        <ContentPresenter
                            HorizontalAlignment="Center"
                            VerticalAlignment="Center">
                        </ContentPresenter>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <!-- Define triggers for mouse over and button press states -->
        <Style.Triggers>
            <Trigger
                Property="IsMouseOver"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumGray}" />
            </Trigger>
            <Trigger
                Property="IsPressed"
                Value="True">
                <Setter
                    Property="Background"
                    Value="{DynamicResource MediumDarkGray}" />
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style
        x:Key="ScrollBarTrackThumb"
        TargetType="{x:Type Thumb}">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Grid
                        x:Name="Grid">
                        <Rectangle
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Fill="Transparent" />
                        <Border
                            x:Name="CornerScrollBarRectangle"
                            CornerRadius="5"
                            HorizontalAlignment="Stretch"
                            VerticalAlignment="Stretch"
                            Width="Auto"
                            Height="Auto"
                            Margin="0,1,0,1"
                            Background="{TemplateBinding Background}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="Tag"
                            Value="Horizontal">
                            <Setter
                                TargetName="CornerScrollBarRectangle"
                                Property="Width"
                                Value="Auto" />
                            <Setter
                                TargetName="CornerScrollBarRectangle"
                                Property="Height"
                                Value="5" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type ScrollBar}">
        
        <Setter
            Property="Stylus.IsFlicksEnabled"
            Value="false" />
        <Setter
            Property="Foreground"
            Value="{DynamicResource MediumGray}" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="Width"
            Value="6" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ScrollBar}">
                    <Grid
                        x:Name="GridRoot"
                        Width="7"
                        Background="{TemplateBinding Background}">
                        <Grid.RowDefinitions>
                            <RowDefinition
                                Height="0.00001*" />
                        </Grid.RowDefinitions>
                        <Track
                            x:Name="PART_Track"
                            Grid.Row="0"
                            IsDirectionReversed="true"
                            Focusable="false">
                            <Track.Thumb>
                                <Thumb
                                    x:Name="Thumb"
                                    Background="{TemplateBinding Foreground}"
                                    Style="{DynamicResource ScrollBarTrackThumb}" />
                            </Track.Thumb>
                            <Track.IncreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageUp"
                                    Command="ScrollBar.PageDownCommand"
                                    Opacity="0"
                                    Focusable="false" />
                            </Track.IncreaseRepeatButton>
                            <Track.DecreaseRepeatButton>
                                <RepeatButton
                                    x:Name="PageDown"
                                    Command="ScrollBar.PageUpCommand"
                                    Opacity="0"
                                    Focusable="false" />
                            </Track.DecreaseRepeatButton>
                        </Track>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            SourceName="Thumb"
                            Property="IsMouseOver"
                            Value="true">
                        </Trigger>
                        <Trigger
                            SourceName="Thumb"
                            Property="IsDragging"
                            Value="true">
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="false">
                            <Setter
                                TargetName="Thumb"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="Orientation"
                            Value="Horizontal">
                            <Setter
                                TargetName="GridRoot"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter
                                TargetName="PART_Track"
                                Property="LayoutTransform">
                                <Setter.Value>
                                    <RotateTransform
                                        Angle="-90" />
                                </Setter.Value>
                            </Setter>
                            <Setter
                                Property="Width"
                                Value="Auto" />
                            <Setter
                                Property="Height"
                                Value="8" />
                            <Setter
                                TargetName="Thumb"
                                Property="Tag"
                                Value="Horizontal" />
                            <Setter
                                TargetName="PageDown"
                                Property="Command"
                                Value="ScrollBar.PageLeftCommand" />
                            <Setter
                                TargetName="PageUp"
                                Property="Command"
                                Value="ScrollBar.PageRightCommand" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type ContextMenu}">
        <Setter
            Property="SnapsToDevicePixels"
            Value="True" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter
            Property="Grid.IsSharedSizeScope"
            Value="true" />
        <Setter
            Property="HasDropShadow"
            Value="True" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type ContextMenu}">
                    <Border
                        x:Name="Border"
                        Background="{DynamicResource MediumGray}"
                        BorderThickness="1">
                        <StackPanel
                            IsItemsHost="True"
                            KeyboardNavigation.DirectionalNavigation="Cycle" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="HasDropShadow"
                            Value="true">
                            <Setter
                                TargetName="Border"
                                Property="Padding"
                                Value="0" />
                            <Setter
                                TargetName="Border"
                                Property="CornerRadius"
                                Value="5" />
                        </Trigger>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="Border"
                                Property="Background"
                                Value="{DynamicResource MediumGray}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        TargetType="{x:Type MenuItem}">
        <Setter 
            Property="Width"
            Value="60"/>
        <Setter
            Property="Height"
            Value="25" />
        <!-- Control Template for MenuItem -->
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type MenuItem}">
                    <Grid>
                        <!-- This could be replaced by other shapes, images, etc. -->
                        <Border
                            x:Name="MenuItemBorder"
                            Background="{TemplateBinding Background}"
                            BorderThickness="0"
                            BorderBrush="{DynamicResource MediumGray}" 
                            CornerRadius="5"/>
                        <ContentPresenter
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            ContentSource="Header" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <!-- Change background to red when the mouse is over -->
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="MenuItemBorder"
                                Property="Background"
                                Value="{DynamicResource MediumDarkGray}" />
                        </Trigger>

                        <!-- Change foreground when the item is disabled -->
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="Foreground"
                                Value="{DynamicResource MediumGray}" />
                        </Trigger>

                        <!-- Change visual state for checked items (for checkable menu items) -->
                        <Trigger
                            Property="IsChecked"
                            Value="True">
                            <Setter
                                Property="FontWeight"
                                Value="Bold" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>